

(defvar system_menu_button_hover false)
(defvar system_menu_open false)
(defvar showMain true)
(defvar power_reveal false)

(defwidget system_menu_button []
(eventbox
        :cursor "pointer"
        :onclick "scripts/toggleSystemMenu.sh"
        ;;:onhover "eww update system_menu_button_hover=true"
        ;;:onhoverlost "eww update system_menu_button_hover=false"
        :width 80
        :class "sys-menu-box"
        (box
          :class "button-box"
          (button
            ;;:class "con"
            :class {system_menu_button_hover ? "con con-hover" : "con"}
            ;;:timeout "0.05s"
            :onclick "scripts/toggleSystemMenu.sh"
            (label
              :class "icon"
              :text ""  ;;"            "
              :justify "left"
            )
          )
        )
      )
)


(defwidget menu_button []
  (eventbox 
    :class "menu-button"
    ;;name
    (children)
  )
)






(defwidget system_menu_items []
  (box
    :visible {showMain}
    ;;:width 330
    :class "system-menu-container"
    :orientation "v"
    :spacing 14
    :space-evenly false ;; Affects size of all child elements
    ;; Sliders
    (box
      :orientation "h"
      (system_stats)
      (battery_stats_v2)
    )
    (box
      :orientation "h"
      :spacing 10
      :space-evenly false
      
    )
   (box
      :orientation "h"
      :spacing 10
      :space-evenly true
      ;; Weather
      ;;(weather2)

      (box)
    )

    (box
      :orientation "v"
      :spacing 20
      :space-evenly false
      :class "menu-widget"
      (box
        :class {volumeL.mute == "true" ? "sliders mute" : "sliders"}
        (volume_slider)
      ) 
      (box
        :class {microphone.mute == "true" ? "sliders mute" : "sliders"}
        (microphone_slider)
      )
      (box
        :class "sliders"
        (brightness_slider)
      )
    )
    ;; Menu button row 1
    (box
      :orientation "h"
      :spacing 10
      (network_button)
      (box
        :spacing 10
        (bluetooth_button)
        (nightlight_button)
      )
    )

    ;; Menu buttons row 2
    (box
      :orientation "h"
      :spacing 10
      (box
        :spacing 10
        (keyboard_button)
        (theme_button)
      )
      (display)
    )

    ;; Bottom row
    (centerbox
      :class "menu-widget"
      :orientation "h"
      (box
        :orientation "h"
        :space-evenly false
        :spacing 8
        (box
          :width 48
          :class "pfp"
          :halign "start"
        )
        (label
          :halign "end"
          :text "${user}\\n@scythe" 
        )
      )
      ;;(eventbox
      ;; :onhover "eww update power_reveal=true"
      ;;  :onhoverlost "eww update power_reveal=false"
      ;;  "ababa"
      ;;)
      ;; could create toggle with "eww state" to get variable and then run a script to change value
      (label :text "") 
      (box
        :space-evenly false
        :spacing 0
        :halign "end" 
        ;;:class "bottom-row"
        (eventbox
          ;;:onhover "eww update power_reveal=true"
          ;;:onhoverlost "eww update power_reveal=false"
          (revealer
            :reveal {power_reveal}
            :transition "slideleft"
            :duration "100ms"
            (box
              :space-evenly false
              :spacing 4
              :style "padding: 6px;"
              (eventbox
                :class "power-button power-off icon"
                ;;:halign "end"
                :cursor "pointer"
                :width 36
                :height 36
                ""
              )
              (eventbox
                :class "power-button lock icon"
                ;;:halign "end"
                :cursor "pointer"
                :width 36
                :height 36
                :onclick "~/myNixOSConfig/home-manager/scripts/lockScreen.sh"
                ""
              )
              (eventbox
                :class "power-button restart icon"
                ;;:halign "end"
                :cursor "pointer"
                :width 36
                :height 36
                (label
                  :text ""
                )
              )
              "|"
            )
          )
        )
        (box
          :style "padding-top: 6px; padding-bottom: 6px;"
          (eventbox
            ;;:style "margin: 6px;"
            :class "power-button icon"
            :halign "end"
            :cursor "pointer"
            :width 36
            :height 36
            ;;:onhover "eww update power_reveal=true"
            :onclick {power_reveal ? "eww update power_reveal=false" : "eww update power_reveal=true"}
            ;;:onhoverlost "eww update power_reveal=false"
            ;;:width 20
            ;;:height 20
            ""
          )
        )
      )
    )
  )
)

(defwindow system_menu
  :monitor 0
  :windowtype "normal"
  :focusable false
  :stacking "fg"
  :geometry (geometry :x "10px"
                      :y "10px"
                      :width "2px" ;; Workaround: set to lowest width that can still allow the revealer to work but minimize the size of the window to an almost insignificant area so that its not capturing as many mouse clicks when system_menu is not visableb
                      :height "100%"
                      :anchor "top right")

  (revealer
    :reveal {system_menu_open}
    :transition "slideleft" ;; Using slidedown here seems to make system_menu take up the full width when not revealed
    :duration "150ms"
    :valign "start"
    (box
      :class "system-menu-container-base"
      (box
        (system_menu_items)
        (wifi_menu_container)
      )
    )
  )
)


