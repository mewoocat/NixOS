import Widget from 'resource:///com/github/Aylur/ags/widget.js';
import Utils from 'resource:///com/github/Aylur/ags/utils.js';

var url = `https://api.open-meteo.com/v1/forecast?latitude=47.6062&longitude=-122.3321&hourly=temperature_2m&temperature_unit=fahrenheit&wind_speed_unit=ms&precipitation_unit=inch`
//var raw = '{"latitude":47.595562,"longitude":-122.32442,"generationtime_ms":0.02396106719970703,"utc_offset_seconds":0,"timezone":"GMT","timezone_abbreviation":"GMT","elevation":59.0,"hourly_units":{"time":"iso8601","temperature_2m":"°F"},"hourly":{"time":["2024-02-16T00:00","2024-02-16T01:00"],"temperature_2m":[41.8,40.7]}}'
var raw = '{"latitude":47.595562,"longitude":-122.32442,"generationtime_ms":0.02396106719970703,"utc_offset_seconds":0,"timezone":"GMT","timezone_abbreviation":"GMT","elevation":59.0,"hourly_units":{"time":"iso8601","temperature_2m":"°F"},"hourly":{"time":["2024-02-16T00:00","2024-02-16T01:00","2024-02-16T02:00","2024-02-16T03:00","2024-02-16T04:00","2024-02-16T05:00","2024-02-16T06:00","2024-02-16T07:00","2024-02-16T08:00","2024-02-16T09:00","2024-02-16T10:00","2024-02-16T11:00","2024-02-16T12:00","2024-02-16T13:00","2024-02-16T14:00","2024-02-16T15:00","2024-02-16T16:00","2024-02-16T17:00","2024-02-16T18:00","2024-02-16T19:00","2024-02-16T20:00","2024-02-16T21:00","2024-02-16T22:00","2024-02-16T23:00","2024-02-17T00:00","2024-02-17T01:00","2024-02-17T02:00","2024-02-17T03:00","2024-02-17T04:00","2024-02-17T05:00","2024-02-17T06:00","2024-02-17T07:00","2024-02-17T08:00","2024-02-17T09:00","2024-02-17T10:00","2024-02-17T11:00","2024-02-17T12:00","2024-02-17T13:00","2024-02-17T14:00","2024-02-17T15:00","2024-02-17T16:00","2024-02-17T17:00","2024-02-17T18:00","2024-02-17T19:00","2024-02-17T20:00","2024-02-17T21:00","2024-02-17T22:00","2024-02-17T23:00","2024-02-18T00:00","2024-02-18T01:00","2024-02-18T02:00","2024-02-18T03:00","2024-02-18T04:00","2024-02-18T05:00","2024-02-18T06:00","2024-02-18T07:00","2024-02-18T08:00","2024-02-18T09:00","2024-02-18T10:00","2024-02-18T11:00","2024-02-18T12:00","2024-02-18T13:00","2024-02-18T14:00","2024-02-18T15:00","2024-02-18T16:00","2024-02-18T17:00","2024-02-18T18:00","2024-02-18T19:00","2024-02-18T20:00","2024-02-18T21:00","2024-02-18T22:00","2024-02-18T23:00","2024-02-19T00:00","2024-02-19T01:00","2024-02-19T02:00","2024-02-19T03:00","2024-02-19T04:00","2024-02-19T05:00","2024-02-19T06:00","2024-02-19T07:00","2024-02-19T08:00","2024-02-19T09:00","2024-02-19T10:00","2024-02-19T11:00","2024-02-19T12:00","2024-02-19T13:00","2024-02-19T14:00","2024-02-19T15:00","2024-02-19T16:00","2024-02-19T17:00","2024-02-19T18:00","2024-02-19T19:00","2024-02-19T20:00","2024-02-19T21:00","2024-02-19T22:00","2024-02-19T23:00","2024-02-20T00:00","2024-02-20T01:00","2024-02-20T02:00","2024-02-20T03:00","2024-02-20T04:00","2024-02-20T05:00","2024-02-20T06:00","2024-02-20T07:00","2024-02-20T08:00","2024-02-20T09:00","2024-02-20T10:00","2024-02-20T11:00","2024-02-20T12:00","2024-02-20T13:00","2024-02-20T14:00","2024-02-20T15:00","2024-02-20T16:00","2024-02-20T17:00","2024-02-20T18:00","2024-02-20T19:00","2024-02-20T20:00","2024-02-20T21:00","2024-02-20T22:00","2024-02-20T23:00","2024-02-21T00:00","2024-02-21T01:00","2024-02-21T02:00","2024-02-21T03:00","2024-02-21T04:00","2024-02-21T05:00","2024-02-21T06:00","2024-02-21T07:00","2024-02-21T08:00","2024-02-21T09:00","2024-02-21T10:00","2024-02-21T11:00","2024-02-21T12:00","2024-02-21T13:00","2024-02-21T14:00","2024-02-21T15:00","2024-02-21T16:00","2024-02-21T17:00","2024-02-21T18:00","2024-02-21T19:00","2024-02-21T20:00","2024-02-21T21:00","2024-02-21T22:00","2024-02-21T23:00","2024-02-22T00:00","2024-02-22T01:00","2024-02-22T02:00","2024-02-22T03:00","2024-02-22T04:00","2024-02-22T05:00","2024-02-22T06:00","2024-02-22T07:00","2024-02-22T08:00","2024-02-22T09:00","2024-02-22T10:00","2024-02-22T11:00","2024-02-22T12:00","2024-02-22T13:00","2024-02-22T14:00","2024-02-22T15:00","2024-02-22T16:00","2024-02-22T17:00","2024-02-22T18:00","2024-02-22T19:00","2024-02-22T20:00","2024-02-22T21:00","2024-02-22T22:00","2024-02-22T23:00"],"temperature_2m":[41.8,40.7,40.0,38.8,37.0,37.0,36.4,36.4,34.6,33.9,32.7,32.7,34.0,32.8,32.1,32.0,33.3,36.9,41.3,45.6,47.7,48.3,48.2,47.5,45.4,43.2,40.7,40.3,39.7,39.6,38.1,37.5,37.4,37.3,37.8,37.7,37.3,37.2,37.6,39.2,41.3,43.2,47.1,48.3,49.0,50.0,50.9,49.1,49.0,47.2,45.9,45.2,45.1,45.0,44.8,44.2,44.2,44.3,44.2,44.3,44.0,39.2,38.3,37.6,37.7,38.0,38.4,38.8,38.8,39.3,39.7,39.9,40.1,40.1,40.1,40.2,40.5,40.5,40.7,40.7,39.3,38.7,38.8,38.9,38.2,37.3,38.3,38.4,38.2,40.5,41.8,42.0,41.6,41.1,40.9,40.4,40.1,40.2,40.2,40.2,40.4,40.5,40.7,40.0,40.0,40.7,41.1,41.4,41.5,41.7,40.7,41.3,42.2,44.2,47.2,48.8,51.2,53.7,54.6,54.5,51.9,47.9,45.2,44.0,43.4,42.9,42.3,42.2,42.2,42.2,42.2,42.3,42.3,42.0,41.6,41.6,42.3,43.4,44.7,46.3,47.9,48.8,48.1,46.6,45.4,45.0,44.9,44.9,44.9,44.9,44.9,44.9,44.9,44.7,44.2,43.4,43.0,43.1,43.4,43.9,44.5,45.3,46.0,46.4,46.7,47.0,47.5,48.0]}}'

// Get data from api
// await is needed to wait for the return of the data
const data = await Utils.fetch(url)
    .then(res => res.json())
    .catch(console.error)

console.log("TEMP = " + data.hourly.temperature_2m[0])

//const j = JSON.parse(raw)
//console.log(j)
//console.log("temp = " + j.hourly.temperature_2m)

// Parse data



export const Weather = () => Widget.Box({
    children: [
        // Temp
        Widget.Label({
            label: `${data.hourly.temperature_2m[0]}`,
        }),
        // Status
        Widget.Label({

        }),
    ]
})